# Based on the official nginx Dockerfile
# https://github.com/nginxinc/docker-nginx/blob/master/mainline/stretch/Dockerfile
FROM ubuntu:xenial
LABEL maintainer "Anton Kerschbaum <jives@jivesnet.com>"

ARG DEBIAN_FRONTEND=noninteractive
ENV LC_ALL C
ENV GOSU_VERSION 1.9

# Prerequisites
RUN apt-get update && apt-get install -y --no-install-recommends \
		apt-transport-https \
		ca-certificates \
		cron \
		gnupg \
		mysql-client \
		supervisor \
		syslog-ng \
		syslog-ng-core \
		syslog-ng-mod-redis \
		dirmngr \
		netcat \
		psmisc \
		wget \
	&& rm -rf /var/lib/apt/lists/* \
	&& dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')" \
	&& wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch" \
	&& chmod +x /usr/local/bin/gosu \
	&& gosu nobody true

RUN mkdir -p /build && mkdir /usr/share/doc/sogo \
	&& touch /usr/share/doc/sogo/empty.sh \
	&& apt-key adv --keyserver keys.gnupg.net --recv-key 0x810273C4 \
	&& echo "deb-src http://packages.inverse.ca/SOGo/nightly/3/ubuntu/ xenial xenial" >> /etc/apt/sources.list.d/sogo.list \
	# save list of currently-installed packages so build dependencies can be cleanly removed later
	&& savedAptMark="$(apt-mark showmanual)" \
	&& apt-get update \
	&& apt-get install --no-install-recommends --no-install-suggests -y git cmake libexpat1-dev \
	&& cd /build && mkdir wbxml2 \
	# (777 to ensure APT's "_apt" user can access it too)
	&& chmod 777 wbxml2 && cd wbxml2 \	
	&& git clone https://github.com/libwbxml/libwbxml.git \
	&& cmake libwbxml \
	&& make \
	&& make test \
	&& make install \
	&& ldconfig \
	&& cd .. && mkdir sope \
	# (777 to ensure APT's "_apt" user can access it too)
	&& chmod 777 sope && cd sope \
	&& apt-get build-dep -y sope \
	&& DEB_BUILD_OPTIONS="nocheck parallel=$(nproc)" apt-get source --compile sope \
	# Workaround for https://bugs.launchpad.net/bugs/1687445
	&& echo 'deb http://ports.ubuntu.com/ubuntu-ports/ zesty main restricted' > /etc/apt/sources.list.d/zesty.list \
	&& apt-get -y install dpkg-dev/zesty \
	# create a temporary local APT repo to install from (so that dependency resolution can be handled by APT, as it should be)
	&& dpkg-scanpackages . > Packages \
	&& echo "deb [ trusted=yes ] file:///build/sope/ ./" >> /etc/apt/sources.list.d/temp.list \
	&& apt-get -o Acquire::GzipIndexes=false update \
	&& apt-get build-dep -y sogo sogo-activesync \	
#	&& apt-get update && apt-get install -y --force-yes \
#		sogo \
#		sogo-activesync \
#	&& rm -rf /var/lib/apt/lists/* \
#	&& echo '* * * * *   sogo   /usr/sbin/sogo-ealarms-notify 2>/dev/null' > /etc/cron.d/sogo \
#	&& echo '* * * * *   sogo   /usr/sbin/sogo-tool expire-sessions 60' >> /etc/cron.d/sogo \
#	&& echo '0 0 * * *   sogo   /usr/sbin/sogo-tool update-autoreply -p /etc/sogo/sieve.creds' >> /etc/cron.d/sogo \
#	&& touch /etc/default/locale \
#	# update sogo user created by the official debian package
#	# to match the user created by the sogo package
#	&& usermod -m -c "SOGo daemon" -d /var/lib/sogo sogo
#
#COPY ./bootstrap-sogo.sh /
#COPY syslog-ng.conf /etc/syslog-ng/syslog-ng.conf
#COPY supervisord.conf /etc/supervisor/supervisord.conf
#
#CMD exec /usr/bin/supervisord -c /etc/supervisor/supervisord.conf
#
#RUN rm -rf /tmp/* /var/tmp/*
